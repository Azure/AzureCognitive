% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/endpoint.R
\name{call_cognitive_endpoint}
\alias{call_cognitive_endpoint}
\title{Call a Cognitive Service REST endpoint}
\usage{
call_cognitive_endpoint(endpoint, operation, options = list(),
  headers = list(), body = NULL, encode = "json",
  http_verb = c("GET", "POST", "PUT", "PATCH", "DELETE", "HEAD"),
  http_status_handler = c("stop", "warn", "message", "pass"))
}
\arguments{
\item{endpoint}{An object of class \code{cognitive_endpoint}.}

\item{operation}{The operation to perform.}

\item{options}{Any query parameters that the operation takes.}

\item{headers}{Any optional HTTP headers to include in the REST call. Note that \code{call_cognitive_endpoint} will handle authentication details automatically, so don't include them here.}

\item{body}{The body of the HTTP request for the REST call.}

\item{encode}{The encoding (really content-type) for the body. Can be \code{json} if the body is JSON text, or \code{raw} for a binary object.}

\item{http_verb}{The HTTP verb for the REST call.}

\item{http_status_handler}{How to handle a failed REST call. \code{stop}, \code{warn} and \code{message} will call the corresponding \code{*_for_status} handler in the httr package; \code{pass} will return the raw response object unchanged. The last one is mostly intended for debugging purposes.}
}
\value{
For a successful REST call, the contents of the response. This will usually be a list, obtained by translating the raw JSON body into R. If the call returns a non-success HTTP status code, based on the \code{http_status_handler} argument.
}
\description{
Call a Cognitive Service REST endpoint
}
\details{
This function does the low-level work of constructing a HTTP request and then calling the REST endpoint. It is meant to be used by other packages that provide higher-level views of the service functionality.
}
\seealso{
\link{cognitive_endpoint}, \link{create_cognitive_service}, \link{get_cognitive_service}
}
